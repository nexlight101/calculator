// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sum struct {
	Number1              int32    `protobuf:"varint,1,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              int32    `protobuf:"varint,2,opt,name=number2,proto3" json:"number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sum) Reset()         { *m = Sum{} }
func (m *Sum) String() string { return proto.CompactTextString(m) }
func (*Sum) ProtoMessage()    {}
func (*Sum) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{0}
}

func (m *Sum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sum.Unmarshal(m, b)
}
func (m *Sum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sum.Marshal(b, m, deterministic)
}
func (m *Sum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sum.Merge(m, src)
}
func (m *Sum) XXX_Size() int {
	return xxx_messageInfo_Sum.Size(m)
}
func (m *Sum) XXX_DiscardUnknown() {
	xxx_messageInfo_Sum.DiscardUnknown(m)
}

var xxx_messageInfo_Sum proto.InternalMessageInfo

func (m *Sum) GetNumber1() int32 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *Sum) GetNumber2() int32 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type CalculatorRequest struct {
	Sum                  *Sum     `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatorRequest) Reset()         { *m = CalculatorRequest{} }
func (m *CalculatorRequest) String() string { return proto.CompactTextString(m) }
func (*CalculatorRequest) ProtoMessage()    {}
func (*CalculatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{1}
}

func (m *CalculatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatorRequest.Unmarshal(m, b)
}
func (m *CalculatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatorRequest.Marshal(b, m, deterministic)
}
func (m *CalculatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatorRequest.Merge(m, src)
}
func (m *CalculatorRequest) XXX_Size() int {
	return xxx_messageInfo_CalculatorRequest.Size(m)
}
func (m *CalculatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatorRequest proto.InternalMessageInfo

func (m *CalculatorRequest) GetSum() *Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

type CalculatorResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatorResponse) Reset()         { *m = CalculatorResponse{} }
func (m *CalculatorResponse) String() string { return proto.CompactTextString(m) }
func (*CalculatorResponse) ProtoMessage()    {}
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{2}
}

func (m *CalculatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatorResponse.Unmarshal(m, b)
}
func (m *CalculatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatorResponse.Marshal(b, m, deterministic)
}
func (m *CalculatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatorResponse.Merge(m, src)
}
func (m *CalculatorResponse) XXX_Size() int {
	return xxx_messageInfo_CalculatorResponse.Size(m)
}
func (m *CalculatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatorResponse proto.InternalMessageInfo

func (m *CalculatorResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

//Prime API messages
type PrimeNumberRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberRequest) Reset()         { *m = PrimeNumberRequest{} }
func (m *PrimeNumberRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberRequest) ProtoMessage()    {}
func (*PrimeNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{3}
}

func (m *PrimeNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberRequest.Unmarshal(m, b)
}
func (m *PrimeNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberRequest.Marshal(b, m, deterministic)
}
func (m *PrimeNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberRequest.Merge(m, src)
}
func (m *PrimeNumberRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberRequest.Size(m)
}
func (m *PrimeNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberRequest proto.InternalMessageInfo

func (m *PrimeNumberRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberResponse) Reset()         { *m = PrimeNumberResponse{} }
func (m *PrimeNumberResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberResponse) ProtoMessage()    {}
func (*PrimeNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{4}
}

func (m *PrimeNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberResponse.Unmarshal(m, b)
}
func (m *PrimeNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberResponse.Marshal(b, m, deterministic)
}
func (m *PrimeNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberResponse.Merge(m, src)
}
func (m *PrimeNumberResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberResponse.Size(m)
}
func (m *PrimeNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberResponse proto.InternalMessageInfo

func (m *PrimeNumberResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// Greatest Common Factor messages
type GCFRequest struct {
	Number1              int32    `protobuf:"varint,1,opt,name=number1,proto3" json:"number1,omitempty"`
	Number2              int32    `protobuf:"varint,2,opt,name=number2,proto3" json:"number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCFRequest) Reset()         { *m = GCFRequest{} }
func (m *GCFRequest) String() string { return proto.CompactTextString(m) }
func (*GCFRequest) ProtoMessage()    {}
func (*GCFRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{5}
}

func (m *GCFRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCFRequest.Unmarshal(m, b)
}
func (m *GCFRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCFRequest.Marshal(b, m, deterministic)
}
func (m *GCFRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCFRequest.Merge(m, src)
}
func (m *GCFRequest) XXX_Size() int {
	return xxx_messageInfo_GCFRequest.Size(m)
}
func (m *GCFRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCFRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCFRequest proto.InternalMessageInfo

func (m *GCFRequest) GetNumber1() int32 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *GCFRequest) GetNumber2() int32 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type GCFResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCFResponse) Reset()         { *m = GCFResponse{} }
func (m *GCFResponse) String() string { return proto.CompactTextString(m) }
func (*GCFResponse) ProtoMessage()    {}
func (*GCFResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87e717c78a24322a, []int{6}
}

func (m *GCFResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCFResponse.Unmarshal(m, b)
}
func (m *GCFResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCFResponse.Marshal(b, m, deterministic)
}
func (m *GCFResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCFResponse.Merge(m, src)
}
func (m *GCFResponse) XXX_Size() int {
	return xxx_messageInfo_GCFResponse.Size(m)
}
func (m *GCFResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCFResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCFResponse proto.InternalMessageInfo

func (m *GCFResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Sum)(nil), "calculator.Sum")
	proto.RegisterType((*CalculatorRequest)(nil), "calculator.CalculatorRequest")
	proto.RegisterType((*CalculatorResponse)(nil), "calculator.CalculatorResponse")
	proto.RegisterType((*PrimeNumberRequest)(nil), "calculator.PrimeNumberRequest")
	proto.RegisterType((*PrimeNumberResponse)(nil), "calculator.PrimeNumberResponse")
	proto.RegisterType((*GCFRequest)(nil), "calculator.GCFRequest")
	proto.RegisterType((*GCFResponse)(nil), "calculator.GCFResponse")
}

func init() {
	proto.RegisterFile("calculatorpb/calculator.proto", fileDescriptor_87e717c78a24322a)
}

var fileDescriptor_87e717c78a24322a = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0x06, 0x23, 0x4c, 0x44, 0x71, 0x84, 0x18, 0x02, 0xf5, 0x63, 0x41, 0xf0, 0xa0, 0x55,
	0x23, 0x08, 0x7a, 0x12, 0x03, 0xed, 0x49, 0x91, 0xe4, 0xe6, 0xad, 0x09, 0x7b, 0x28, 0x64, 0x9b,
	0xb8, 0x9b, 0xf5, 0x87, 0xfb, 0x0b, 0xa4, 0x49, 0xd7, 0x9d, 0x12, 0xa2, 0xd0, 0xe3, 0x9b, 0xf7,
	0xe6, 0xbd, 0xdd, 0xc7, 0xc0, 0xa8, 0x98, 0x95, 0x85, 0x2e, 0x67, 0x4d, 0x25, 0xeb, 0xfc, 0xc6,
	0x82, 0x71, 0x2d, 0xab, 0xa6, 0x42, 0xb0, 0x13, 0xf6, 0x08, 0x6e, 0xa6, 0x05, 0x86, 0xb0, 0xbb,
	0xd0, 0x22, 0xe7, 0xf2, 0x2e, 0x74, 0xce, 0x9c, 0xcb, 0x9d, 0xd4, 0x40, 0xcb, 0xc4, 0xe1, 0x36,
	0x65, 0x62, 0xf6, 0x00, 0x87, 0xc9, 0xaf, 0x51, 0xca, 0x3f, 0x35, 0x57, 0x0d, 0x9e, 0x83, 0xab,
	0xb4, 0x68, 0x4d, 0xfc, 0xf8, 0x60, 0x4c, 0xb2, 0x33, 0x2d, 0xd2, 0x25, 0xc7, 0xae, 0x00, 0xe9,
	0x9e, 0xaa, 0xab, 0x85, 0xe2, 0x18, 0x80, 0x27, 0xb9, 0xd2, 0x65, 0xb3, 0x7a, 0xc0, 0x0a, 0x2d,
	0xd5, 0xef, 0x72, 0x2e, 0xf8, 0x5b, 0x9b, 0x6a, 0x62, 0x02, 0xf0, 0xba, 0x67, 0x18, 0x75, 0x87,
	0xd8, 0x35, 0x1c, 0xad, 0xa9, 0xff, 0x31, 0x7f, 0x06, 0x98, 0x26, 0x13, 0x63, 0xba, 0x49, 0x09,
	0x17, 0xe0, 0xb7, 0x0e, 0x7f, 0x07, 0xc5, 0xdf, 0x0e, 0x2d, 0x2b, 0xe3, 0xf2, 0x6b, 0x5e, 0x70,
	0x7c, 0x05, 0xb0, 0x43, 0x1c, 0xd1, 0xb6, 0x7a, 0xcd, 0x46, 0x27, 0x43, 0x74, 0x17, 0xcd, 0xb6,
	0x30, 0x05, 0x9f, 0x7c, 0x1e, 0xd7, 0x16, 0xfa, 0x1d, 0x46, 0xa7, 0x83, 0xbc, 0x71, 0xbc, 0x75,
	0xf0, 0x09, 0xdc, 0x69, 0x32, 0xc1, 0x80, 0x6a, 0x6d, 0x65, 0xd1, 0x71, 0x6f, 0x6e, 0x77, 0x5f,
	0xf6, 0x3f, 0xf6, 0xe8, 0x21, 0xe6, 0x5e, 0x7b, 0x7e, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x11, 0xc6, 0x11, 0x0b, 0x9f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Calculator Takes in two numbers and returns the sum of them
	Calculator(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error)
	// PrimeNUmberDecomposition rpc
	PrimeNumber(ctx context.Context, in *PrimeNumberRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberClient, error)
	// Get the GCF(Greatest Common Factor) of 2 numbers
	GCF(ctx context.Context, in *GCFRequest, opts ...grpc.CallOption) (CalculatorService_GCFClient, error)
}

type calculatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorServiceClient(cc grpc.ClientConnInterface) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Calculator(ctx context.Context, in *CalculatorRequest, opts ...grpc.CallOption) (*CalculatorResponse, error) {
	out := new(CalculatorResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Calculator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumber(ctx context.Context, in *PrimeNumberRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberClient interface {
	Recv() (*PrimeNumberResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberClient) Recv() (*PrimeNumberResponse, error) {
	m := new(PrimeNumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) GCF(ctx context.Context, in *GCFRequest, opts ...grpc.CallOption) (CalculatorService_GCFClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/GCF", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceGCFClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_GCFClient interface {
	Recv() (*GCFResponse, error)
	grpc.ClientStream
}

type calculatorServiceGCFClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceGCFClient) Recv() (*GCFResponse, error) {
	m := new(GCFResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Calculator Takes in two numbers and returns the sum of them
	Calculator(context.Context, *CalculatorRequest) (*CalculatorResponse, error)
	// PrimeNUmberDecomposition rpc
	PrimeNumber(*PrimeNumberRequest, CalculatorService_PrimeNumberServer) error
	// Get the GCF(Greatest Common Factor) of 2 numbers
	GCF(*GCFRequest, CalculatorService_GCFServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Calculator(ctx context.Context, req *CalculatorRequest) (*CalculatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Calculator not implemented")
}
func (*UnimplementedCalculatorServiceServer) PrimeNumber(req *PrimeNumberRequest, srv CalculatorService_PrimeNumberServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumber not implemented")
}
func (*UnimplementedCalculatorServiceServer) GCF(req *GCFRequest, srv CalculatorService_GCFServer) error {
	return status.Errorf(codes.Unimplemented, "method GCF not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Calculator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Calculator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Calculator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Calculator(ctx, req.(*CalculatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumber(m, &calculatorServicePrimeNumberServer{stream})
}

type CalculatorService_PrimeNumberServer interface {
	Send(*PrimeNumberResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberServer) Send(m *PrimeNumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_GCF_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GCFRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).GCF(m, &calculatorServiceGCFServer{stream})
}

type CalculatorService_GCFServer interface {
	Send(*GCFResponse) error
	grpc.ServerStream
}

type calculatorServiceGCFServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceGCFServer) Send(m *GCFResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calculator",
			Handler:    _CalculatorService_Calculator_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumber",
			Handler:       _CalculatorService_PrimeNumber_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GCF",
			Handler:       _CalculatorService_GCF_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculatorpb/calculator.proto",
}
